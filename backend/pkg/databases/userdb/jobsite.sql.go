// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: jobsite.sql

package userdb

import (
	"context"
	"database/sql"
)

const addJobsite = `-- name: AddJobsite :one
INSERT INTO JobSites(name, addr, location_lat, location_lng, company_id) VALUES (?,?,?,?,?) RETURNING id, name, addr, location_lat, location_lng, company_id
`

type AddJobsiteParams struct {
	Name        string          `json:"name"`
	Addr        sql.NullString  `json:"addr"`
	LocationLat sql.NullFloat64 `json:"location_lat"`
	LocationLng sql.NullFloat64 `json:"location_lng"`
	CompanyID   sql.NullInt64   `json:"company_id"`
}

func (q *Queries) AddJobsite(ctx context.Context, arg AddJobsiteParams) (JobSite, error) {
	row := q.db.QueryRowContext(ctx, addJobsite,
		arg.Name,
		arg.Addr,
		arg.LocationLat,
		arg.LocationLng,
		arg.CompanyID,
	)
	var i JobSite
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Addr,
		&i.LocationLat,
		&i.LocationLng,
		&i.CompanyID,
	)
	return i, err
}
